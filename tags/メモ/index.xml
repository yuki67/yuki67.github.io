<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>メモ on yuki&#39;s blog</title>
    <link>https://yuki67.github.io/tags/%E3%83%A1%E3%83%A2/</link>
    <description>Recent content in メモ on yuki&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>by yuki</copyright>
    <lastBuildDate>Sun, 15 Jul 2018 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://yuki67.github.io/tags/%E3%83%A1%E3%83%A2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ob-ipython で sympy を使うときに出力を綺麗にする</title>
      <link>https://yuki67.github.io/post/ob-ipython_sympy/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/ob-ipython_sympy/</guid>
      <description>jupyter notebook で sympy を使うとセルの実行結果を Latex で表示してくれるので便利だが、 ob-ipython で sympy を使うとセルの実行結果の表示が jupyter notebook ほど便利でない。
#+BEGIN_SRC ipython :session :exports both :results output raw drawer from sympy import * init_printing() x = symbols(&amp;#34;x&amp;#34;) eqn = Eq(x**2+3*x-4) print(latex(eqn)) #+END_SRC #+RESULTS: :RESULTS: x^{2} + 3 x - 4 = 0 :END:from sympy import * init_printing() x = symbols(&amp;#34;x&amp;#34;) eqn = Eq(x**2+3*x-4) print(latex(eqn)) x2 + 3 x - 4 = 0
幸い org-babel には「src block の実行結果を別の src block に通して、その結果を元の src block の結果にする」 という機能があるので、その機能を使えばこの問題を回避できる。</description>
    </item>
    
    <item>
      <title>PAPI を使った</title>
      <link>https://yuki67.github.io/post/hello_papi/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/hello_papi/</guid>
      <description>PAPI を使うと CPU のハードウェアカウンタを使って様々な値を測定できる。 例えば
 実行した命令の数 実行した浮動小数点演算の数 パイプラインがストールした回数 キャッシュヒット/ミス の回数 分岐予測の成功/失敗数  を測定できる。測定した値は FLOPS の測定なりパフォーマンスのチューニングなりに使える。
適切に設定すれば CPU 以外のハードウェアのカウンタも読めるらしいが、使ってないのでよくわからない。
インストール 昔はインストールするのにカーネルにパッチを当てる必要があったりして一苦労だったらしい (検索すると出てくる) が、 最新版の Linux カーネルであればインストールは ./configure; make; make install で済んだ。
利用可能なイベントの確認 papi_avail で利用可能なイベントの一覧を確認できる。コンシューマ向けの CPU だと性能測定用のハードウェアカウンタがしょぼいようなので、インストールしたら必ず確認したほうがいい。
自分の環境では以下のようになった。
$ papi_avail Available PAPI preset and user defined events plus hardware information. -------------------------------------------------------------------------------- PAPI version : 5.6.1.0 Operating system : Linux 4.4.0-128-generic Vendor string and code : GenuineIntel (1, 0x1) Model string and code : Intel(R) Core(TM) i7-7700 CPU @ 3.</description>
    </item>
    
    <item>
      <title>std::random_device を使うと valgrind が落ちる</title>
      <link>https://yuki67.github.io/post/valgrind_random_device/</link>
      <pubDate>Thu, 31 May 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/valgrind_random_device/</guid>
      <description>環境 valgrind 3.11, clang++ 5.0
問題 #include &amp;lt;iostream&amp;gt;#include &amp;lt;random&amp;gt; int main() { std::random_device rd; std::cout &amp;lt;&amp;lt; rd() &amp;lt;&amp;lt; std::endl; return 0; }  上記のコードはコンパイルすれば普通に実行できるが、 valgrind から実行すると valgrind が落ちる。
$ clang++ test.cpp -std=c++17 $ ./a.out 1240201163 $ /usr/bin/valgrind ./a.out ==13508== Memcheck, a memory error detector ==13508== Copyright (C) 2002-2015, and GNU GPL&amp;#39;d, by Julian Seward et al. ==13508== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info ==13508== Command: .</description>
    </item>
    
    <item>
      <title>CMakeでC&#43;&#43;17が有効にならない</title>
      <link>https://yuki67.github.io/post/cmake_c&#43;&#43;17/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/cmake_c&#43;&#43;17/</guid>
      <description>問題 CMake で set_property(TARGET hoge PROPERTY CXX_STANDARD 17) としても
CMake Error at CMakeLists.txt:16 (add_executable): CXX_STANDARD is set to invalid value &amp;#39;17&amp;#39; というエラーが出る。
原因 ppaから入れたCMakeのバージョンが古かった。
CMake 3.8 以上でないと PROPERTY CXX_STANDARD を17にすることができない。
解決法 CMakeをアップデートする。
CMakeLists.txt に cmake_minimum_required(VERSION 3.8) を追加する。
参考 CXX_STANDARD — CMake 3.7.2 Documentation
CXX_STANDARD — CMake 3.8.2 Documentation</description>
    </item>
    
    <item>
      <title>OpenGL 関係のライブラリが壊れたときの対処</title>
      <link>https://yuki67.github.io/post/opengl_broken/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/opengl_broken/</guid>
      <description>問題 glew とか GLFW とか NVidia のドライバとかを一通りインストールしたにもかかわらず OpenGL の hello world プログラムがコンパイルできない。
原因 なぜか知らないがリンクに必要なオブジェクトファイルが削除され、シンボリックリンクをたどった先が存在しないファイルになっていた。
解決法 dpkg -S コマンドでどのオブジェクトファイルがどのパッケージでインストールされたかを確認して、そのパッケージを sudo apt install --reinstall する。
例えば
$ dpkg -S /usr/lib/x86_64-linux-gnu/mesa/libGL.so libgl1-mesa-dev:amd64: /usr/lib/x86_64-linux-gnu/mesa/libGL.so となる。</description>
    </item>
    
    <item>
      <title>octave でつまづいたところ</title>
      <link>https://yuki67.github.io/post/octave_getting_started/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/octave_getting_started/</guid>
      <description>octave の本質的でない部分についてのメモ。
   問題 / 疑問 解決法 / 答え 備考     立ち上がったグラフウィンドウが消せない close Manipulation of Plot Windows   グラフの軸の縮尺が等しくない axis(&amp;quot;equal&amp;quot;) Axis Configuration   同じグラフに複数回プロットしたい hold on Manipulation of Plot Windows   今読み込んでいる変数を表示させたい whos Status of Variables   for を回している変数でインデックスを取れない int32 にキャストする range が double 型の値を返すのが原因 Ranges Integer Data Types   end と endfor と endif とでなにか違うのか なにも違わない すべて end でも構わないが、使い分けたほうがいい Statements   org-babel で関数を定義しようとするとエラーが出る src block に :session をつける インタラクティブモードでない場合、ファイル内と同じ名前の関数しか定義できない Function Files    </description>
    </item>
    
    <item>
      <title>Autoloading failed to define function … が出る</title>
      <link>https://yuki67.github.io/post/autoload_undefined_function/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/autoload_undefined_function/</guid>
      <description>問題 emacs でいつも使っているキーボードバインディングを使おうとすると Autoloading failed to define function HOGE と出て実行できない。
原因 パッケージのアップデートで HOGE 関数の名前が変更されていた。
解決法 呼び出す関数の名前を変える。
備考 定義されていない関数を呼び出した場合、普通は void-function HOGE というおなじみのエラーが表示されるのですぐ分かるが、今回のエラーは初めて見たので解決に時間がかかった。
今まで見なかったこのエラーが出た原因は HOGE のキーボードバインディングを use-package で定義していたことにあった。
(use-package package-name :bind (:map global-map (&amp;#34;KEY&amp;#34; . HOGE))) とすると、 KEY を押したときに HOGE が autoload される。その結果エラーメッセージが見慣れないものになる。</description>
    </item>
    
    <item>
      <title>octave が emacs でハングする</title>
      <link>https://yuki67.github.io/post/octave_hangs_on_emacs/</link>
      <pubDate>Tue, 08 May 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/octave_hangs_on_emacs/</guid>
      <description>問題 Ubuntu 16.04 で emacs 25.3 から octave 4.0 を使おうとするとハングする (org-babel から実行しても実行が終わらない)。
解決法 octave を最新版 (4.4) にしたら直った。最新版は ppa にないので手元でビルドした。
備考 octave の最新版をビルドするときにライブラリが足りないという警告がいくつか出るのでパッケージをインストールして対処したが、 以下の警告は最後まで残った。
configure: WARNING: SUNDIALS IDA library not configured with IDAKLU, ode15i and ode15s will not support the sparse Jacobian feature 今は ode15 コマンドを使わないのでほっておいたが、後で必要になるかもしれない。</description>
    </item>
    
    <item>
      <title>clang&#43;&#43;-5.0 を入れたのに C&#43;&#43;17 が有効にならない</title>
      <link>https://yuki67.github.io/post/clang&#43;&#43;_no_cpp17/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/clang&#43;&#43;_no_cpp17/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>emacs の正規表現で (&#34;[&#34;, &#34;]&#34; 以外の1文字) を表現する</title>
      <link>https://yuki67.github.io/post/emacs_regex_bracket/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/emacs_regex_bracket/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo の C&#43;&#43; 用 シンタックスハイライトを直す</title>
      <link>https://yuki67.github.io/post/hugo_cpp_highlight/</link>
      <pubDate>Sun, 18 Mar 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/hugo_cpp_highlight/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MathJax 数式内のフォントを変更する</title>
      <link>https://yuki67.github.io/post/mathjax_font/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/mathjax_font/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu 17.10 で MDR-1000X を使う</title>
      <link>https://yuki67.github.io/post/ubuntu_bluetooth/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/ubuntu_bluetooth/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu 17.10 で Kindle for PC を使う</title>
      <link>https://yuki67.github.io/post/kindle_for_ubuntu/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/kindle_for_ubuntu/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu 17.10で最大化/最小化ボタンを左へ移動する</title>
      <link>https://yuki67.github.io/post/buttons_to_left/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/buttons_to_left/</guid>
      <description>&lt;p&gt;これ↓&lt;/p&gt;


&lt;figure&gt;
    
        &lt;img src=&#34;https://yuki67.github.io/ox-hugo/buttons.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>古いファイルを削除してファイルの数を一定にする</title>
      <link>https://yuki67.github.io/post/delete_old_files/</link>
      <pubDate>Tue, 09 Jan 2018 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/delete_old_files/</guid>
      <description>&lt;p&gt;ログの整理で使った。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>