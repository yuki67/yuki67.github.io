<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>iiyuki's blog (コード置き場についての文書)</title><link>https://yuki67.github.io/</link><description></description><atom:link type="application/rss+xml" rel="self" href="https://yuki67.github.io/categories/kodozhi-kichang.xml"></atom:link><language>ja</language><copyright>Contents © 2017 &lt;a href="mailto:123syokutaku@gmail.com"&gt;iiyuki&lt;/a&gt; </copyright><lastBuildDate>Sun, 01 Oct 2017 13:47:46 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>もっとbucklescriptをいじった</title><link>https://yuki67.github.io/posts/more_bucklesctipt/</link><dc:creator>iiyuki</dc:creator><description>&lt;p&gt;
デモサイトは&lt;a href="https://yuki67.github.io/ShapeOCaml/"&gt;ここ&lt;/a&gt;にある。
&lt;/p&gt;

&lt;p&gt;
もう遅いので説明なんかは後で。
&lt;/p&gt;</description><category>javascript</category><category>ocaml</category><category>コード置き場</category><guid>https://yuki67.github.io/posts/more_bucklesctipt/</guid><pubDate>Sun, 01 Oct 2017 13:44:21 GMT</pubDate></item><item><title>hello bucklescript</title><link>https://yuki67.github.io/posts/hello_buckle/</link><dc:creator>iiyuki</dc:creator><description>&lt;div&gt;&lt;p&gt;
bucklescriptを使うとOCamlを使ってjavascriptが書けると聞いたので試した。
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://yuki67.github.io/posts/hello_buckle/"&gt;続きを読む…&lt;/a&gt; (残りを読むのに必要な時間は1分)&lt;/p&gt;&lt;/div&gt;</description><category>javascript</category><category>ocaml</category><category>コード置き場</category><guid>https://yuki67.github.io/posts/hello_buckle/</guid><pubDate>Sun, 24 Sep 2017 00:15:48 GMT</pubDate></item><item><title>オートマトン in OCaml</title><link>https://yuki67.github.io/posts/automaton_ocaml/</link><dc:creator>iiyuki</dc:creator><description>&lt;div&gt;&lt;p&gt;
前にpythonでやったことをOCamlでやったのでまとめた。
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://yuki67.github.io/posts/automaton_ocaml/"&gt;続きを読む…&lt;/a&gt; (残りを読むのに必要な時間は6分)&lt;/p&gt;&lt;/div&gt;</description><category>ocaml</category><category>コード置き場</category><guid>https://yuki67.github.io/posts/automaton_ocaml/</guid><pubDate>Sun, 17 Sep 2017 09:10:14 GMT</pubDate></item><item><title>perlのワンライナー</title><link>https://yuki67.github.io/posts/perl-oneliner/</link><dc:creator>iiyuki</dc:creator><description>&lt;div&gt;&lt;p&gt;
便利だったので。
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://yuki67.github.io/posts/perl-oneliner/"&gt;続きを読む…&lt;/a&gt; (残りを読むのに必要な時間は1分)&lt;/p&gt;&lt;/div&gt;</description><category>perl</category><category>コード置き場</category><guid>https://yuki67.github.io/posts/perl-oneliner/</guid><pubDate>Sun, 10 Sep 2017 05:59:02 GMT</pubDate></item><item><title>ランダムピック</title><link>https://yuki67.github.io/posts/random_pick/</link><dc:creator>iiyuki</dc:creator><description>&lt;div&gt;&lt;p&gt;
整数の組 \((i, j)\) に対してランダムな整数を割り振りたい。
それも、全ての組について乱数を保存することなく割り振りたい。
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://yuki67.github.io/posts/random_pick/"&gt;続きを読む…&lt;/a&gt; (残りを読むのに必要な時間は3分)&lt;/p&gt;&lt;/div&gt;</description><category>mathjax</category><category>python</category><category>コード置き場</category><guid>https://yuki67.github.io/posts/random_pick/</guid><pubDate>Tue, 22 Aug 2017 08:08:02 GMT</pubDate></item></channel></rss>