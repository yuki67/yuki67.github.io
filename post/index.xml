<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on yuki&#39;s blog</title>
    <link>https://yuki67.github.io/post/</link>
    <description>Recent content in Posts on yuki&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>by yuki</copyright>
    <lastBuildDate>Sun, 03 Dec 2017 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://yuki67.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CudaとOpenGLを連携させてアニメーションを描画する</title>
      <link>https://yuki67.github.io/post/cuda_animation/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/cuda_animation/</guid>
      <description>&lt;p&gt;CUDAを使って毎フレーム画像を更新したいが、いちいち画像をCPUにお繰り返している暇がないときに。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cudaプログラムの実行時間測定</title>
      <link>https://yuki67.github.io/post/cuda_time/</link>
      <pubDate>Fri, 24 Nov 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/cuda_time/</guid>
      <description>&lt;p&gt;Cuda入門に出てきた関数をクラスにまとめたので、コピペ用に。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ビットマップをOpenGLで描画する</title>
      <link>https://yuki67.github.io/post/cuda_bitmap/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/cuda_bitmap/</guid>
      <description>&lt;p&gt;cudaでビットマップを作って、それをOpenGLを使ってウィンドウ上に表示したい。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hugoに移行した</title>
      <link>https://yuki67.github.io/post/to_hugo/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/to_hugo/</guid>
      <description>&lt;p&gt;前からhugoというスタティックサイトジェネレータが気になっていて試してみたりもしたのが、
org-modeで記事が書けると公式で言われている割にほとんど使い物にならず、移行はしていなかった。&lt;/p&gt;

&lt;p&gt;今回もう一度トライした結果ox-hugoという拡張機能がほぼ自分の思っていた通りのことをしてくれることが分かったので、
思い切って移行した。ox-hugoがとても気が利いているので、移行はほぼコピペだけですんだ。&lt;/p&gt;

&lt;p&gt;記事を最近書いていないのに移項だけするのは気が引けたが、見栄えもよくなったし記事を書くのも
かなり楽になったのでよしとしよう。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>もっとbucklescriptをいじった</title>
      <link>https://yuki67.github.io/post/more_bucklescript/</link>
      <pubDate>Sun, 01 Oct 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/more_bucklescript/</guid>
      <description>&lt;p&gt;デモサイトは&lt;a href=&#34;https://yuki67.github.io/ShapeOCaml/&#34;&gt;ここ&lt;/a&gt;にある。&lt;/p&gt;

&lt;p&gt;もう遅いので説明なんかは後で。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hello bucklescript!</title>
      <link>https://yuki67.github.io/post/hello_buckle/</link>
      <pubDate>Sun, 24 Sep 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/hello_buckle/</guid>
      <description>&lt;p&gt;bucklescriptを使うとOCamlを使ってjavascriptが書けると聞いたので試した。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>オートマトン in OCaml</title>
      <link>https://yuki67.github.io/post/automaton/</link>
      <pubDate>Sun, 17 Sep 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/automaton/</guid>
      <description>&lt;p&gt;前にpythonでやったことをOCamlでやったのでまとめた。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>教科書</title>
      <link>https://yuki67.github.io/post/textbooks/</link>
      <pubDate>Sun, 03 Sep 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/textbooks/</guid>
      <description>&lt;p&gt;講義で使った教科書のリスト。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ランダムピック</title>
      <link>https://yuki67.github.io/post/random_pick/</link>
      <pubDate>Tue, 22 Aug 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/random_pick/</guid>
      <description>&lt;p&gt;整数の組 \((i, j)\) に対してランダムな整数を割り振りたい。
それも、全ての組について乱数を保存することなく割り振りたい。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>パーリンノイズ</title>
      <link>https://yuki67.github.io/post/perlin_noise/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/perlin_noise/</guid>
      <description>&lt;p&gt;書いたので。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>逆関数法</title>
      <link>https://yuki67.github.io/post/inverse_method/</link>
      <pubDate>Tue, 15 Aug 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/inverse_method/</guid>
      <description>&lt;p&gt;ある分布が与えられたときにその分布に従う乱数を生成することを考える。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>モンテカルロ積分</title>
      <link>https://yuki67.github.io/post/montecarlo_integral/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/montecarlo_integral/</guid>
      <description>&lt;p&gt;積分&lt;/p&gt;

&lt;p&gt;\[
\int_0^{10} e^{-x^2}dx = 0.886227&amp;hellip;
\]&lt;/p&gt;

&lt;p&gt;を、計算で求めることを考える。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nikolaでブログはじめました</title>
      <link>https://yuki67.github.io/post/hazimemasita/</link>
      <pubDate>Fri, 11 Aug 2017 00:00:00 +0900</pubDate>
      
      <guid>https://yuki67.github.io/post/hazimemasita/</guid>
      <description>&lt;p&gt;(今はnikolaを使っておらず、Hugoに移行した。)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>